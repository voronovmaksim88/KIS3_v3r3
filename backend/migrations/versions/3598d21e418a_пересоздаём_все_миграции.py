"""пересоздаём все миграции

Revision ID: 3598d21e418a
Revises: 
Create Date: 2025-03-22 03:10:48.225167

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3598d21e418a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('control_cabinet_materials',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('counterparty_form',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('currencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=3), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('equipment_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ips',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('payment_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('task_statuses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=16), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('works',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('manufacturers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('counterparty',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('form_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['form_id'], ['counterparty_form.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('model', sa.String(length=64), nullable=True),
    sa.Column('vendor_code', sa.String(length=32), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('manufacturer_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('relevance', sa.Boolean(), nullable=False),
    sa.Column('price_date', sa.Date(), nullable=True),
    sa.Column('discriminator', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturers.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['equipment_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model'),
    sa.UniqueConstraint('vendor_code')
    )
    op.create_table('control_cabinets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.Column('ip_id', sa.Integer(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=False),
    sa.Column('depth', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['equipment.id'], ),
    sa.ForeignKeyConstraint(['ip_id'], ['ips.id'], ),
    sa.ForeignKeyConstraint(['material_id'], ['control_cabinet_materials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('serial', sa.String(length=16), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('start_moment', sa.DateTime(), nullable=True),
    sa.Column('deadline_moment', sa.DateTime(), nullable=True),
    sa.Column('end_moment', sa.DateTime(), nullable=True),
    sa.Column('materials_cost', sa.Integer(), nullable=True),
    sa.Column('materials_paid', sa.Boolean(), nullable=False),
    sa.Column('products_cost', sa.Integer(), nullable=True),
    sa.Column('products_paid', sa.Boolean(), nullable=False),
    sa.Column('work_cost', sa.Integer(), nullable=True),
    sa.Column('work_paid', sa.Boolean(), nullable=False),
    sa.Column('debt', sa.Integer(), nullable=True),
    sa.Column('debt_paid', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['counterparty.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['order_statuses.id'], ),
    sa.PrimaryKeyConstraint('serial')
    )
    op.create_table('people',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('patronymic', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('counterparty_id', sa.Integer(), nullable=True),
    sa.Column('birth_date', sa.Date(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['counterparty_id'], ['counterparty.id'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('box_accounting',
    sa.Column('serial_num', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('order_id', sa.String(length=16), nullable=False),
    sa.Column('scheme_developer_id', sa.UUID(), nullable=False),
    sa.Column('assembler_id', sa.UUID(), nullable=False),
    sa.Column('programmer_id', sa.UUID(), nullable=True),
    sa.Column('tester_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['assembler_id'], ['people.uuid'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.serial'], ),
    sa.ForeignKeyConstraint(['programmer_id'], ['people.uuid'], ),
    sa.ForeignKeyConstraint(['scheme_developer_id'], ['people.uuid'], ),
    sa.ForeignKeyConstraint(['tester_id'], ['people.uuid'], ),
    sa.PrimaryKeyConstraint('serial_num'),
    sa.UniqueConstraint('serial_num')
    )
    op.create_table('comments_on_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_id', sa.String(length=16), nullable=False),
    sa.Column('moment_of_creation', sa.DateTime(), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('person_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.serial'], ),
    sa.ForeignKeyConstraint(['person_id'], ['people.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders_works',
    sa.Column('order_serial', sa.String(length=16), nullable=False),
    sa.Column('work_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_serial'], ['orders.serial'], ),
    sa.ForeignKeyConstraint(['work_id'], ['works.id'], ),
    sa.PrimaryKeyConstraint('order_serial', 'work_id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('payment_status_id', sa.Integer(), nullable=True),
    sa.Column('executor_id', sa.UUID(), nullable=True),
    sa.Column('planned_duration', sa.Interval(), nullable=True),
    sa.Column('actual_duration', sa.Interval(), nullable=True),
    sa.Column('creation_moment', sa.DateTime(), nullable=True),
    sa.Column('start_moment', sa.DateTime(), nullable=True),
    sa.Column('deadline_moment', sa.DateTime(), nullable=True),
    sa.Column('end_moment', sa.DateTime(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('order_serial', sa.String(length=16), nullable=True),
    sa.Column('parent_task_id', sa.Integer(), nullable=True),
    sa.Column('root_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['executor_id'], ['people.uuid'], ),
    sa.ForeignKeyConstraint(['order_serial'], ['orders.serial'], ),
    sa.ForeignKeyConstraint(['parent_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['payment_status_id'], ['payment_statuses.id'], ),
    sa.ForeignKeyConstraint(['root_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['task_statuses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('timings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('order_serial', sa.String(length=16), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('executor_id', sa.UUID(), nullable=True),
    sa.Column('time', sa.Interval(), nullable=False),
    sa.Column('timing_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['executor_id'], ['people.uuid'], ),
    sa.ForeignKeyConstraint(['order_serial'], ['orders.serial'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('timings')
    op.drop_table('tasks')
    op.drop_table('orders_works')
    op.drop_table('comments_on_orders')
    op.drop_table('box_accounting')
    op.drop_table('people')
    op.drop_table('orders')
    op.drop_table('control_cabinets')
    op.drop_table('equipment')
    op.drop_table('counterparty')
    op.drop_table('manufacturers')
    op.drop_table('cities')
    op.drop_table('works')
    op.drop_table('task_statuses')
    op.drop_table('payment_statuses')
    op.drop_table('order_statuses')
    op.drop_table('ips')
    op.drop_table('equipment_types')
    op.drop_table('currencies')
    op.drop_table('countries')
    op.drop_table('counterparty_form')
    op.drop_table('control_cabinet_materials')
    # ### end Alembic commands ###
